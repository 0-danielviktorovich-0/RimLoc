[package]
name = "rimloc-cli"
version = "0.1.0-alpha.1"
edition = "2021"
rust-version = "1.70"
build = "build.rs"
description = "RimLoc CLI: scan, validate, export/import PO for RimWorld localization"
license = "GPL-3.0-only"
repository = "https://github.com/0-danielviktorovich-0/RimLoc"
documentation = "https://0-danielviktorovich-0.github.io/RimLoc/"
keywords = ["rimworld", "cli", "localization", "gettext", "po"]
categories = ["command-line-utilities"]
readme = "README.md"
include = [
  "Cargo.toml",
  "README.md",
  "LICENSE*",
  "build.rs",
  "i18n.toml",
  "src/**",
  "i18n/**"
]

[dependencies]
anyhow = { workspace = true }
clap = { workspace = true }
color-eyre = { version = "0.6", features = ["capture-spantrace"] }
walkdir = { workspace = true }
owo-colors = "4"
rimloc-core = { version = "0.1.0", path = "../rimloc-core" }
rimloc-parsers-xml = { version = "0.1.0", path = "../rimloc-parsers-xml" }
rimloc-export-csv = { version = "0.1.0", path = "../rimloc-export-csv" }
rimloc-export-po = { version = "0.1.0", path = "../rimloc-export-po" }
rimloc-validate = { version = "0.1.0", path = "../rimloc-validate" }
rimloc-import-po = { version = "0.1.0", path = "../rimloc-import-po" }
regex = "1"
quick-xml = "0.36"
reqwest = { version = "0.11", default-features = false, features = ["blocking", "json", "rustls-tls"] }
lru = "0.12"
urlencoding = "2.1"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json"] }
tracing-appender = "0.2"
tracing-error = "0.2"
once_cell = "1"
i18n-embed = { version = "0.16", features = ["fluent-system", "desktop-requester"] }
i18n-embed-fl = "0.10"
unic-langid = "0.9"
rust-embed = { version = "8.7", features = ["include-exclude"] }

serde = { version = "1", features = ["derive"] }
serde_json = "1"

[dev-dependencies]
assert_cmd = "2.0"
predicates = "3.1"
tempfile = "3.10"
once_cell = "1.19"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
insta = { version = "1", features = ["json"] }

[build-dependencies]
cargo-emit = "0.2"

[package.metadata.i18n]
# This section documents the i18n workflow for contributors.
# It is not used by the compiler; itâ€™s here for easy discovery.
readme_notes = """
RimLoc uses the Fluent + i18n-embed + rust-embed stack.
- Translations live under `i18n/{lang}/rimloc.ftl` (and `rimloc-tests.ftl` for tests).
- Add new messages by adding Fluent keys; keep `en` as the source of truth.
- Run `cargo i18n` (if installed) to validate structure.
- Binary embeds all FTL files at build time via rust-embed.
"""
